generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  name       String   @db.VarChar(35)
  email      String   @unique
  password   String
  token      String?
  goal       String?  @db.VarChar(255)
  dailyTime  Int?
  totalHours Int      @default(0)
  createdAt  DateTime @default(now())

  StudyPlans StudyPlans[]

  Reviews Reviews[]
}

model StudyPlans {
  id         String    @id @default(uuid())
  userId     String
  name       String    @db.VarChar(55)
  startDate  DateTime
  endDate    DateTime?
  goal       String    @db.VarChar(255)
  hoursGoal  Int       @default(0)
  hoursSpent Int       @default(0)
  status     String?   @default("active")
  createdAt  DateTime  @default(now())

  User     User       @relation(fields: [userId], references: [id])
  Subjects Subjects[]
}

model Subjects {
  id          String   @id @default(uuid())
  planId      String
  name        String   @db.VarChar(35)
  description String   @db.VarChar(255)
  timeSpent   Int      @default(0)
  color       String
  createdAt   DateTime @default(now())

  StudyPlans StudyPlans @relation(fields: [planId], references: [id])

  Topics Topics[]
}

model Topics {
  id          String   @id @default(uuid())
  subjectId   String
  name        String   @db.VarChar(35)
  description String   @db.VarChar(255)
  timeSpent   Int      @default(0)
  createdAt   DateTime @default(now())

  Subjects Subjects @relation(fields: [subjectId], references: [id])
  Review   Reviews?
}

model Reviews {
  id             String   @id @default(uuid())
  userId         String
  topicId        String   @unique
  timesReviewed  Int      @default(0)
  lastReviewedAt DateTime
  nextReviewAt   DateTime
  status         String?  @default("pending")
  createdAt      DateTime @default(now())

  User  User   @relation(fields: [userId], references: [id])
  Topic Topics @relation(fields: [topicId], references: [id])
}
